PTL_PATH ?= .

ifeq ($(TARGET),)
$(error You need to define target: $(MAKE) TARGET=(msp430|avr|stm32|...))
endif

TARGETDIR = bin-$(TARGET)

include $(PTL_PATH)/Makefile.paths
include $(PTL_PATH)/Makefile.rules.$(TARGET)

GCC_PATH ?=
CROSS_COMPILE ?= $(TARGET)-
GCC_VER ?=
CC = $(GCC_PATH)$(CROSS_COMPILE)gcc$(GCC_VER)
CXX = $(GCC_PATH)$(CROSS_COMPILE)g++$(GCC_VER)
OBJDUMP ?= $(GCC_PATH)$(CROSS_COMPILE)objdump
OBJCOPY ?= $(GCC_PATH)$(CROSS_COMPILE)objcopy

HW_CONFIG ?= \"hw_config_$(TARGET).hpp\"

CFLAGS ?= -O1 -g -Wreturn-type -ffunction-sections -fdata-sections -DHW_CONFIG=$(HW_CONFIG)
ALL_INCLUDE = -I$(PTL_PATH)/include/ $(TARGET_INCLUDE) $(INCLUDE)
TARGET_CFLAGS  ?= $(TARGET_FLAGS)
TARGET_LDFLAGS ?= $(TARGET_FLAGS)
ALL_CFLAGS = $(ALL_INCLUDE) $(TARGET_CFLAGS) $(CFLAGS)
ALL_CXXFLAGS = $(ALL_CFLAGS) -fno-exceptions
LDFLAGS = $(TARGET_LDFLAGS) -Wl,--gc-sections -Wl,-Map=$@.map,--cref


.PRECIOUS: $(TARGETDIR)/%.o

ifneq ($(OVERRIDE_RULES),1)
$(TARGETDIR)/%.o: %.cpp
	mkdir -p $(TARGETDIR)
	$(CXX) $(ALL_CXXFLAGS) -c $^ -o $@

$(TARGETDIR)/%.o: %.c
	mkdir -p $(TARGETDIR)
	$(CXX) $(ALL_CXXFLAGS) -c $^ -o $@
endif

$(TARGETDIR)/%.s: %.cpp
	mkdir -p $(TARGETDIR)
	$(CXX) $(ALL_CXXFLAGS) -S $^ -o $@

$(TARGETDIR)/%.s: %.c
	mkdir -p $(TARGETDIR)
	$(CXX) $(ALL_CXXFLAGS) -S $^ -o $@

disasm-%: $(TARGETDIR)/%
	$(OBJDUMP) -dSt --demangle $^ >$^.disasm

all:

clean:
	rm -f $(TARGETDIR)/*.o
